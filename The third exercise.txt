package com.example.myapplication

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.Button
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Modifier
import androidx.compose.ui.res.painterResource
import androidx.navigation.NavController
import androidx.navigation.NavHostController
import androidx.navigation.compose.NavHost
import androidx.navigation.compose.composable
import androidx.navigation.compose.rememberNavController
import com.example.myapplication.ui.theme.MyApplicationTheme
import java.io.FileInputStream
import java.io.FileOutputStream
import java.io.InputStream
import java.io.OutputStream

class MainActivity : ComponentActivity()  {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            MyApplicationTheme {
                // A surface container using the 'background' color from the theme
                Surface(
                    modifier = Modifier.fillMaxSize()
                ) {
                    val array = ByteArray(100);
                    var message_txt: String;
                    var painter_int: Int;
                    try{
                        val input: InputStream = FileInputStream("My_android.txt");
                        input.read(array, 0, 10);
                        message_txt = array.toString();
                        val arrays = input.read(array, 10, input.available());
                        val painter_txt = arrays.toString();
                        painter_int = painter_txt.toInt()
                        input.close();
                        //ComposeNavigation(message_txt, painter_txt);
                    } catch(e:Exception) {
                        message_txt = "S.O.B Android";
                        painter_int = androidx.core.R.drawable.ic_call_answer_video_low;
                    }
                    ComposeNavigation(message_txt, painter_int);
                }
            }
        }
    }
}

@Composable
fun Greeting(name: String, myPainter: Int, modifier: Modifier = Modifier, navController: NavController) {
    Column(
        Modifier
            .verticalScroll(rememberScrollState())
    )
    {
        val number:Int = 10;
        var string:String = "S.O.B";
        var isExpanded  by remember{ mutableStateOf("") };
        Button(onClick = {
            try {
                val out: OutputStream = FileOutputStream("My_android.txt");
                val dataByte:ByteArray = name.toByteArray();
                out.write(dataByte);
                val myPainter_txt: String = myPainter.toString();
                val dataBytes:ByteArray = myPainter_txt.toByteArray();
                out.write(dataBytes);
                out.close();
                System.exit(0);
            } catch(e:Exception){System.exit(0);}
        })
        {Text("Quit he application")}
        Button(onClick =  {navController.navigate("B.O.S Android");})
        {Text("Change the screen") }

        Button(onClick =  {
            if(isExpanded.isNotEmpty())
                isExpanded = "";
            else
                isExpanded = " ";
        }
        )
        {
            if (isExpanded.isNotEmpty())
            {
                Text("Change the color")
            }
            else {
                Text("Change the color again")
            }
        }
        repeat(number) {
            Image(
                //painter = painterResource(androidx.core.R.drawable.ic_call_answer_video_low),
                painter = painterResource(myPainter),
                contentDescription = "Contact profile picture"
            )
            Text(text = " ")
            Text(
                text = string,
                color = MaterialTheme.colorScheme.secondary,
                style = MaterialTheme.typography.titleSmall
            )
            Text(text = " ")
            Text(
                text = string,
                color = MaterialTheme.colorScheme.primary,
                style = MaterialTheme.typography.bodyLarge
            )
        }
    }
}

@Composable
fun Responding(name: String, myPainter: Int, modifier: Modifier = Modifier, navController: NavController) {
    Column(
        Modifier
            .verticalScroll(rememberScrollState())
    )
    {
        var isExpanded  by remember{ mutableStateOf("") };
        Button(onClick =  {navController.navigateUp();})
        {Text("Change the screen back");}
        repeat(1) {
            Image(
                //painter = painterResource(androidx.core.R.drawable.ic_call_answer_video_low),
                painter = painterResource(myPainter),
                contentDescription = "Contact profile picture"
            )
            Text("Change the screen back");
            Text(name);
        }
    }
}

@Composable
fun ComposeNavigation(name: String, myPainter: Int) {
    val navController:NavHostController = rememberNavController()
    NavHost(
        navController = navController,
        startDestination = "S.O.B Android"
    ) {
        composable("S.O.B Android") {
            Greeting("Greeting", myPainter, navController = navController)
        }
        composable("B.O.S Android") {
            Responding("Responding", myPainter, navController = navController)
        }
    }
}

Changes in build.gradle(app)
dependencies {
    implementation("androidx.core:core-ktx:1.10.1")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.6.1")
    implementation("androidx.activity:activity-compose:1.7.0")
    implementation(platform("androidx.compose:compose-bom:2023.08.00"))
    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.ui:ui-graphics")
    implementation("androidx.compose.ui:ui-tooling-preview")
    implementation("androidx.compose.material3:material3")
    testImplementation("junit:junit:4.13.2")
    androidTestImplementation("androidx.test.ext:junit:1.1.5")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
    androidTestImplementation(platform("androidx.compose:compose-bom:2023.08.00"))
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
    debugImplementation("androidx.compose.ui:ui-tooling")
    debugImplementation("androidx.compose.ui:ui-test-manifest")
    dependencies {
    
    val nav_version = "2.7.6"
    val appcompat_version = "1.6.1"

    implementation ("androidx.navigation:navigation-compose:$nav_version")
    implementation ("androidx.navigation:navigation-compose:2.4.2")

    // Java language implementation
    implementation ("androidx.navigation:navigation-fragment:$nav_version")
    implementation ("androidx.navigation:navigation-ui:$nav_version")

    // Kotlin
    implementation ("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation ("androidx.navigation:navigation-ui-ktx:$nav_version")

    // Feature module Support
    implementation ("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")

    // Testing Navigation
    androidTestImplementation("androidx.navigation:navigation-testing:$nav_version")

    // Jetpack Compose Integration
    implementation ("androidx.navigation:navigation-compose:$nav_version")

    implementation ("com.android.support:appcompat-v7:28.0.0")

    implementation("androidx.appcompat:appcompat:$appcompat_version")
    // For loading and tinting drawables on older versions of the platform
    implementation("androidx.appcompat:appcompat-resources:$appcompat_version")
}
